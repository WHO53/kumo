// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct WebViewBackend(Boxed<ffi::WebKitWebViewBackend>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::webkit_web_view_backend_get_type(), ptr as *mut _) as *mut ffi::WebKitWebViewBackend,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::webkit_web_view_backend_get_type(), ptr as *mut _),
        type_ => || ffi::webkit_web_view_backend_get_type(),
    }
}

impl WebViewBackend {
    //#[doc(alias = "webkit_web_view_backend_new")]
    // pub fn new(backend: /*Unimplemented*/Option<Basic: Pointer>, user_data:
    // /*Unimplemented*/Option<Basic: Pointer>) -> WebViewBackend {    unsafe {
    // TODO: call ffi:webkit_web_view_backend_new() }
    //}

    //#[doc(alias = "webkit_web_view_backend_get_wpe_backend")]
    //#[doc(alias = "get_wpe_backend")]
    // pub fn wpe_backend(&mut self) -> /*Unimplemented*/Option<Basic: Pointer> {
    //    unsafe { TODO: call ffi:webkit_web_view_backend_get_wpe_backend() }
    //}
}
